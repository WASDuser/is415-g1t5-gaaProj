---
title: "SKATER"
author: "William"
date: "October 16, 2024"
date-modified: "last-modified"
execute: 
  eval: false
  echo: true
  freeze: true
format: 
  html:
    code-fold: true
    code-tools: true
    code-link: true
---

```{r}
pacman::p_load(spdep, tmap, sf, ClustGeo, 
               ggpubr, cluster, factoextra, NbClust,
               heatmaply, corrplot, psych, tidyverse, GGally)
```

```{r}
crime_merged_sf <- read_rds('data/crime_merged.rds')

selected_year <- 2023
selected_region <- 'Peninsular'
# selected_type <- 'causing_injury'

crime_merged_sf_filtered <- crime_merged_sf %>%
  filter(year == selected_year, region == selected_region)

sf_data <- crime_merged_sf_filtered
attribute_data <- crime_merged_sf_filtered %>% select(crimes, crime_rate) %>% st_drop_geometry()

proxmat <- dist(attribute_data, method = 'euclidean')
hclust_ward <- hclust(proxmat, method = 'ward.D')
groups <- as.factor(cutree(hclust_ward, k = 6))
sf_cluster <- cbind(sf_data, as.matrix(groups)) %>%
  rename(`CLUSTER` = `as.matrix.groups.`)

sp_data <- as_Spatial(sf_data)
nb <- poly2nb(sp_data)
coords <- st_coordinates(st_centroid(st_geometry(sf_data)))

nb[17] <- as.integer(64)
nb[[69]] <- append(nb[[69]], as.integer(68))

components <- n.comp.nb(nb)
distance_matrix <- st_distance(st_centroid(st_geometry(sf_data)))

for (i in 1:(components$nc - 1)) {
  for (j in (i + 1):components$nc) {
    component_i <- which(components$comp.id == i)
    component_j <- which(components$comp.id == j)
    sub_distance_matrix <- distance_matrix[component_i, component_j, drop = FALSE]
    min_dist <- which(sub_distance_matrix == min(sub_distance_matrix), arr.ind = TRUE)
    point_i <- component_i[min_dist[1, 1]]
    point_j <- component_j[min_dist[1, 2]]
    nb[[point_i]] <- unique(c(nb[[point_i]], point_j))
    nb[[point_j]] <- unique(c(nb[[point_j]], point_i))
  }
}

n.comp.nb(nb)$nc

lcosts <- nbcosts(nb, attribute_data)
crime_merged_w <- nb2listw(nb, lcosts, style = "B")
crime_merged_mst <- mstree(crime_merged_w)
clustN <- spdep::skater(edges = crime_merged_mst[, 1:2],
  data = attribute_data,
  method = "euclidean",
  ncuts = 5)

groups_mat <- as.matrix(clustN$groups)
sf_spatialcluster <- cbind(sf_cluster, as.factor(groups_mat)) %>%
  rename(`Skater_CLUSTER` = `as.factor.groups_mat.`)

hclust.map <- qtm(sf_cluster, "CLUSTER") +
  tm_borders(alpha = 0.5)

shclust.map <- qtm(sf_spatialcluster, "Skater_CLUSTER") +
  tm_borders(alpha = 0.5)

tmap_arrange(hclust.map, shclust.map, asp = NA, ncol = 2)

```

